package constants

import (
	"os"
	"syscall"
	"unsafe"
)

const (
	META_COMMAND_SUCCESS              = "META_COMMAND_SUCCESS"
	META_COMMAND_FAIL                 = "META_COMMAND_FAIL"
	META_COMMAND_UNRECOGNIZED_COMMAND = "META_COMMAND_UNRECOGNIZED_COMMAND"
	META_COMMAND_EXIT                 = "META_COMMAND_EXIT"

	PREPARE_SUCCESS                = "PREPARE_SUCCESS"
	PREPARE_UNRECOGNIZED_STATEMENT = "PREPARE_UNRECOGNIZED_STATEMENT"
	PREPARE_SYNTAX_ERROR           = "PREPARE_SYNTAX_ERROR"
	// PREPARE_NEGATIVE_ID            = "PREPARE_NEGATIVE_ID" // NOTE: Not needed since Regex will not match negative numbers
	PREPARE_STRING_TOO_LONG = "PREPARE_STRING_TOO_LONG"
	PREPARE_NON_POSITIVE_ID = "PREPARE_NON_POSITIVE_ID"

	STATEMENT_INSERT = "STATEMENT_INSERT"
	STATEMENT_SELECT = "STATEMENT_SELECT"
)

const (
	EXECUTE_SUCCESS        = "EXECUTE_SUCCESS"
	EXECUTE_TABLE_FULL     = "EXECUTE_TABLE_FULL"
	EXECUTE_STATEMENT_FAIL = "EXECUTE_STATEMENT_FAIL"
	EXECUTE_DUPLICATE_KEY  = "EXECUTE_DUPLICATE_KEY"
)

const (
	COLUMN_USERNAME_SIZE = 32
	COLUMN_EMAIL_SIZE    = 255
)

const (
	ID_SIZE       = 4
	USERNAME_SIZE = 32
	EMAIL_SIZE    = 255

	ID_OFFSET       = 0
	USERNAME_OFFSET = ID_OFFSET + ID_SIZE
	EMAIL_OFFSET    = USERNAME_OFFSET + USERNAME_SIZE
	ROW_SIZE        = ID_SIZE + USERNAME_SIZE + EMAIL_SIZE

	PAGE_SIZE       = 4096
	TABLE_MAX_PAGES = 100
)

const (
	DEFAULT_FILE_MODE = os.FileMode(0644)
)

const (
	O_RDWR  = syscall.O_RDWR
	O_CREAT = syscall.O_CREAT
	S_IWUSR = syscall.S_IWUSR
	S_IRUSR = syscall.S_IRUSR
)

type NodeType uint8

const (
	NODE_INTERNAL NodeType = iota
	NODE_LEAF
)

const (
	NODE_TYPE_SIZE          = unsafe.Sizeof(uint8(0))
	NODE_TYPE_OFFSET        = 0
	IS_ROOT_SIZE            = unsafe.Sizeof(uint8(0))
	IS_ROOT_OFFSET          = NODE_TYPE_SIZE
	PARENT_POINTER_SIZE     = unsafe.Sizeof(uint32(0))
	PARENT_POINTER_OFFSET   = IS_ROOT_OFFSET + IS_ROOT_SIZE
	COMMON_NODE_HEADER_SIZE = NODE_TYPE_SIZE + IS_ROOT_SIZE + PARENT_POINTER_SIZE
)

const (
	LEAF_NODE_NUM_CELLS_SIZE   = unsafe.Sizeof(uint32(0))
	LEAF_NODE_NUM_CELLS_OFFSET = COMMON_NODE_HEADER_SIZE
	LEAF_NODE_HEADER_SIZE      = COMMON_NODE_HEADER_SIZE + LEAF_NODE_NUM_CELLS_SIZE
)

const (
	LEAF_NODE_KEY_SIZE        = unsafe.Sizeof(uint32(0))
	LEAF_NODE_KEY_OFFSET      = 0
	LEAF_NODE_VALUE_SIZE      = ROW_SIZE
	LEAF_NODE_VALUE_OFFSET    = LEAF_NODE_KEY_OFFSET + LEAF_NODE_KEY_SIZE
	LEAF_NODE_CELL_SIZE       = LEAF_NODE_KEY_SIZE + LEAF_NODE_VALUE_SIZE
	LEAF_NODE_SPACE_FOR_CELLS = PAGE_SIZE - LEAF_NODE_HEADER_SIZE
	LEAF_NODE_MAX_CELLS       = LEAF_NODE_SPACE_FOR_CELLS / LEAF_NODE_CELL_SIZE
)
